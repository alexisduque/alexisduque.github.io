<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Alexis Duque</title>
    <description>R&amp;D and Security Leader @Rtone&lt;br&gt;Ph.D. #iot #vlc #security üí°üîëüö¥‚Äç</description>
    <link>http://alexisduque.me/</link>
    <atom:link href="http://alexisduque.me/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 27 Nov 2019 22:11:06 +0100</pubDate>
    <lastBuildDate>Wed, 27 Nov 2019 22:11:06 +0100</lastBuildDate>
    <generator>Jekyll v3.3.1</generator>
    
      <item>
        <title>Devoxx 2019</title>
        <description>&lt;p&gt;From November 03 to 14, I attended the &lt;a href=&quot;http://www.devoxx.be&quot;&gt;Devoxx BE&lt;/a&gt; and the &lt;a href=&quot;http://www.mixitconf.org&quot;&gt;Devoxx Morroco&lt;/a&gt; (Fri, Lyon) conferences.&lt;/p&gt;

&lt;p&gt;During these software developer events, I gave a Tool-in-Action talks about &lt;a href=&quot;https://devoxx.be/talk/?id=37401&quot;&gt;Machine Learning on IoT and Tensorflow Lite&lt;/a&gt; and a lightening talk introducing &lt;a href=&quot;https://devoxx.be/wednesday-schedule/talk?id=38051&quot;&gt;5G&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can watch the recording of both talk on &lt;a href=&quot;https://www.youtube.com/channel/UCCBVCTuk6uJrN3iFV_3vurg&quot;&gt;Devoxx YouTube channel&lt;/a&gt;.&lt;/p&gt;

&lt;script async=&quot;&quot; class=&quot;speakerdeck-embed&quot; data-id=&quot;4a9fb4ad2c014fa09dd685546a9c5f73&quot; data-ratio=&quot;1.77777777777778&quot; src=&quot;//speakerdeck.com/assets/embed.js&quot;&gt;&lt;/script&gt;

&lt;script async=&quot;&quot; class=&quot;speakerdeck-embed&quot; data-id=&quot;5e98ea67d45d4240bae4a0d572e06d43&quot; data-ratio=&quot;1.77777777777778&quot; src=&quot;//speakerdeck.com/assets/embed.js&quot;&gt;&lt;/script&gt;

</description>
        <pubDate>Sun, 03 Nov 2019 08:44:34 +0100</pubDate>
        <link>http://alexisduque.me/2019/11/03/devoxx-2019/</link>
        <guid isPermaLink="true">http://alexisduque.me/2019/11/03/devoxx-2019/</guid>
        
        
      </item>
    
      <item>
        <title>Devoxx 2019</title>
        <description>&lt;p&gt;From October 28 to 31, I attended the &lt;a href=&quot;https://events19.linuxfoundation.org/events/open-source-summit-europe-2019/&quot;&gt;Linux Foundation Open Source Summit and Embedded Linux Conference Europe&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;During this software developer events, I gave a quick talk about &lt;a href=&quot;https://paclido.fr/lilliput-ae/&quot;&gt;Lilliput-AE&lt;/a&gt;, a lightweight cryptographic block cipher that is a result of the collaborative research project &lt;a href=&quot;https://paclido.fr&quot;&gt;PACLIDO&lt;/a&gt;.&lt;/p&gt;

&lt;script async=&quot;&quot; class=&quot;speakerdeck-embed&quot; data-id=&quot;463e6c4123614d2dad936154173c462d&quot; data-ratio=&quot;1.77777777777778&quot; src=&quot;//speakerdeck.com/assets/embed.js&quot;&gt;&lt;/script&gt;

</description>
        <pubDate>Sun, 03 Nov 2019 08:44:34 +0100</pubDate>
        <link>http://alexisduque.me/2019/11/03/lfelc-2019/</link>
        <guid isPermaLink="true">http://alexisduque.me/2019/11/03/lfelc-2019/</guid>
        
        
      </item>
    
      <item>
        <title>PhD Defense Presentation Slides</title>
        <description>&lt;p&gt;Slides of my PhD defense ‚ÄúBidirectional Visible Light Communications for the Internet of Things‚Äù are available here: &lt;a href=&quot;https://speakerdeck.com/alexisduque/phd-defense-bidirectional-visible-light-communications-for-the-internet-of-things&quot;&gt;slides&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I will share the manuscript very soon.&lt;/p&gt;

&lt;script async=&quot;&quot; class=&quot;speakerdeck-embed&quot; data-id=&quot;767bd8b707aa4501aa269bebb122459b&quot; data-ratio=&quot;1.33333333333333&quot; src=&quot;//speakerdeck.com/assets/embed.js&quot;&gt;&lt;/script&gt;

</description>
        <pubDate>Thu, 11 Oct 2018 18:44:34 +0200</pubDate>
        <link>http://alexisduque.me/2018/10/11/defense-slides/</link>
        <guid isPermaLink="true">http://alexisduque.me/2018/10/11/defense-slides/</guid>
        
        
      </item>
    
      <item>
        <title>PhD Defense on Monday 9th October</title>
        <description>&lt;p&gt;After 3 year of intensive at &lt;strong&gt;Rtone&lt;/strong&gt; and in the &lt;strong&gt;AGORA&lt;/strong&gt; of the &lt;strong&gt;CITI Lab&lt;/strong&gt;, I‚Äôm proud to announce that I will defend  my PhD thesis &lt;em&gt;‚ÄúBidirectional Visible Light Communications for the Internet of Things‚Äù&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;It will take place on &lt;strong&gt;Tuesday October 9th&lt;/strong&gt; starting at 2PM, at the &lt;em&gt;Amphitheater CHAPPE - Department TC, INSA de Lyon, 6 avenue des arts, Villeurbanne&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;You can find an abstract of the thesis and the jury in the following.&lt;/p&gt;

&lt;h3 id=&quot;the-jury-will-be-composed-of&quot;&gt;The jury will be composed of:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Emmanuel CHAPUT&lt;/strong&gt;, Professeur des Universit√©s, INP Toulouse, Rapporteur&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Anne JULIEN-VERGONJANNE&lt;/strong&gt;, Professeur des Universit√©s Univ. Limoges, Rapporteur&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Josep PARADELLS ASPAS&lt;/strong&gt;, Professeur UPC, Rapporteur&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Luc CHASSAGNE&lt;/strong&gt;, Professeur des Universit√©s UVSQ, Examinateur&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Valeria LOSCRI&lt;/strong&gt;, Charg√© de Recherche INRIA Lille, Examinateur&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Herv√© RIVANO&lt;/strong&gt;, Professeur des Universit√©s INSA Lyon, Directeur de th√®se&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Razvan STANICA&lt;/strong&gt;, Ma√Ætre de Conf√©rences INSA Lyon, co Directeur de th√®se&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;abstract&quot;&gt;Abstract&lt;/h3&gt;

&lt;p&gt;With the exponential growth of the Internet of Things, people now expect every household appliance to be smart and connected. At the same time, smartphones have become ubiquitous in our daily life. Their continuous performance improvement and their compatibility with a broad range of radio protocols as WiFi, Bluetooth Low Energy (BLE) or NFC make them the most convenient way to interact with these smart objects. However, providing wireless connectivity with BLE or NFC means adding an extra chipset and an antenna, increasing the object size and price. Previous works already have demonstrated the possibility of receiving information through visible light using an unmodified smartphone thanks to its camera. Also, LED-to-LED communication for smart devices like toys has been shown previously. However, past efforts in LED to camera communication for IoT device communication have been limited.&lt;/p&gt;

&lt;p&gt;In this work, we design LightIoT, a bidirectional visible-light communication (VLC) system between a low-cost, low-power colored LED that is part of an IoT device and an off-the-shelf smartphone. The IoT device is thus able to send and receive information through its LED, while the smartphone uses its camera to receive data and its flashlight to send information. We implement and experimentally evaluate a LED-to-camera VLC system, designed specifically for small LEDs. The proposed solution exploits the rolling shutter effect of unmodified smartphone cameras and an original decoding algorithm, achieving a throughput of nearly 2 kb/s.
Based on the insight gained from an extensive experimental study, we model, for the first time in the literature, the LED-to-camera communication channel. We propose a Markov-modulated Bernoulli process model, which allows us to easily study the performance of different message retransmission strategies. We further exploit this model to implement a simulator for LED-to- Camera communications performance evaluation.&lt;/p&gt;

&lt;p&gt;In order to achieve bi-directional communications, we evaluate flashlight-to- LED communications using non-rooted smartphones and small LEDs. With these constraints, our implementation achieves a throughput of 30 bits/second. While limited, this is enough for a feed-back channel coming to support the required redundancy mechanisms. Some of these redundancy mechanisms are based on random linear coding, never tested previously in VLC.
Therefore, we design and implement, for the first time in the literature, a pseudo random linear coding scheme especially fitted for line-of-sight LED-to-camera conditions. Experimental evaluation highlights that this type of approach increases the goodput up to twice compared to classical retransmission strategies.&lt;/p&gt;

&lt;p&gt;Finally, we compare the energy consumption of LightIoT with the one of a BLE module with similar activity. Our results show that using the LED for communication purposes reduces the energy consumption under a normal usage behavior.&lt;/p&gt;
</description>
        <pubDate>Thu, 04 Oct 2018 12:06:42 +0200</pubDate>
        <link>http://alexisduque.me/jekyll/update/2018/10/04/phd-defense/</link>
        <guid isPermaLink="true">http://alexisduque.me/jekyll/update/2018/10/04/phd-defense/</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>2nd Summer School on Security &amp; Correctness in the IoT</title>
        <description>&lt;p&gt;&lt;img src=&quot;http://alexisduque.me/public/secweek.png&quot; alt=&quot;drawing&quot; width=&quot;150&quot; /&gt;&lt;/p&gt;

&lt;p&gt;From September 3 to 7, I attended for the second time the &lt;a href=&quot;https://www.securityweek.at/school/&quot;&gt;Summer School on Security &amp;amp; Correctness in the Internet of Things 2018&lt;/a&gt; organized by &lt;a href=&quot;https://www.iaik.tugraz.at/content/about_iaik/&quot;&gt;IAIK&lt;/a&gt;, in Graz, Austria.&lt;/p&gt;

&lt;p&gt;This year, the school was collocated with the &lt;a href=&quot;https://www.securityweek.at&quot;&gt;IoT Security Week&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Top level speakers in the field of security gave presentations about software/hardware attacks and countermeasures: binary exploitation, code reuses/injection, hardware side channels, cache covert channels, formal analysis, lightweight cryptography (LWC), etc.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://alexisduque.me/public/tugraz.jpg&quot; alt=&quot;St Martin&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 15 Sep 2018 18:44:34 +0200</pubDate>
        <link>http://alexisduque.me/2018/09/15/spring-shool/</link>
        <guid isPermaLink="true">http://alexisduque.me/2018/09/15/spring-shool/</guid>
        
        
      </item>
    
      <item>
        <title>SSTIC Part 2</title>
        <description>&lt;p&gt;This post is the second part of my notes I took during the SSTIC this year. The first part is available here: &lt;a href=&quot;/2018/06/13/sstic-part-1/&quot;&gt;SSTIC 2018 Part 1&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;rump--nordic-made-easy&quot;&gt;RUMP : Nordic made easy&lt;/h2&gt;
&lt;h4 id=&quot;salma-el-mohib&quot;&gt;&lt;em&gt;Salma El Mohib&lt;/em&gt;&lt;/h4&gt;

&lt;p&gt;Speaker from Digital Security presents 3 python scripts for nRF firmware analysis.
Problem: How to reverse a nRF firmware with IDA? How to map it in IDA?&lt;/p&gt;

&lt;p&gt;In fact, the nRF soft device use SVCALLS.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;nrfparse.py&lt;/code&gt;: build the knowledge database from all the Nordic SDK and softdevice&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;nrfident.py&lt;/code&gt;: nRF device identification + SDK and Soft Device version to get the memory mapping&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;nrfreverse.py&lt;/code&gt;: used after IDA configuration and firmware disassembly. It parses the assembly code to find SVC opcodes. It selects the appropriate functions prototypes and outputs them in the python output window of IDA pro.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The tool is available on Github: &lt;a href=&quot;https://github.com/DigitalSecurity/nrf5x-tools&quot;&gt;nrf5x-tools&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;rump-arm_now&quot;&gt;RUMP: ARM_Now&lt;/h2&gt;
&lt;h4 id=&quot;sanson-chaignon&quot;&gt;&lt;em&gt;Sanson Chaignon&lt;/em&gt;&lt;/h4&gt;

&lt;p&gt;ARM_Now is a qemu powered tool that allows instant setup of virtual machines on arm CPU, mips, powerpc, nios2, x86 and more, for reverse, exploit, fuzzing and programming purpose.&lt;/p&gt;

&lt;p&gt;ARM_Now is available on Github: &lt;a href=&quot;https://github.com/nongiach/arm_now&quot;&gt;arm_now&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;audit-de-s√©curit√©-dun-environnement-docker&quot;&gt;Audit de s√©curit√© d‚Äôun environnement Docker&lt;/h2&gt;
&lt;h4 id=&quot;julien-raeis-matthieu-buffet-anssi&quot;&gt;&lt;em&gt;Julien Raeis, Matthieu Buffet (ANSSI)&lt;/em&gt;&lt;/h4&gt;

&lt;p&gt;Docker is a lightweight virtualization tool for packaging applications and automating the dev/deployment cycle.
Each application block is a container.
Each container has all the files it depends on.
Docker works under windows &amp;amp; Linux.
For a developer, docker images are black boxes in which the application runs. They often do not master the security of their software execution environment.
On the security side, this presentation will focus on the part that makes the Docker images turn and how to harden the host environment.&lt;/p&gt;

&lt;p&gt;Windows Docker containers are based on &lt;code&gt;JOBS&lt;/code&gt; kernel objects that provide a &lt;code&gt;CGROUP&lt;/code&gt; equivalent on Linux.
We can look at the container tree using &lt;code&gt;winobj&lt;/code&gt;.
Each container is in a silo, and in these silos, we discover the isolation mechanism for the symbolic links to be executed in a separate context.
On the filesystem side, the NTFS driver has been patched to handle the isolation.
If it is available, Docker uses Hyper-V to isolate the container and benefits from the Hyper-V isolation mechanism.&lt;/p&gt;

&lt;p&gt;For the audit of a Docker environment, we can control the network interfaces, the permissions on the docker group, mutual authentication by certificates, etc ‚Ä¶
If we do not do it, we expose ourselves to an escalation of privileges via Docker.
To avoid denials of service, we often limit the consumption of resources via &lt;code&gt;ulimit&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Namespaces should be reviewed, especially those that allow to make IPC, to do &lt;code&gt;ptrace&lt;/code&gt;, etc.&lt;/p&gt;

&lt;p&gt;To facilitate the auditing of namespaces, speakers have developed a tool to generate a graph according to which namespace can access which process.&lt;/p&gt;

&lt;p&gt;Process capabilities can be reduced using the tool &lt;code&gt;pscap&lt;/code&gt;.
Then we can use the docker commands to reduce these capabilities.
When the container has access to real-world resources on the Host, it must be ensured that these resources do not allow elevation of privilege to the Host.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Windows Server Containers&lt;/em&gt; are not secure and do not isolate the executed code of the Host. We must therefore favor &lt;em&gt;Hyper-V Containers&lt;/em&gt;, rather than &lt;em&gt;Windows Server Container&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Under Linux, a &lt;code&gt;seccomp&lt;/code&gt; filter is compiled, so if we must decompile it if we want to audit it.&lt;/p&gt;

&lt;p&gt;Speakers worked on a formal Prolog verifier that takes a &lt;code&gt;seccomp&lt;/code&gt; filter as input and evaluates whether or not specific actions can be performed with this filter.&lt;/p&gt;

&lt;p&gt;To improve the containers isolation, it is possible to use &lt;em&gt;Orchestrators&lt;/em&gt; based on virtualization, &lt;em&gt;KAtacontainers&lt;/em&gt; that offer an equivalent of &lt;em&gt;Hyper-V Containers&lt;/em&gt; under windows, &lt;em&gt;gVisor&lt;/em&gt; which is a userland kernel made by Google.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.sstic.org/2018/presentation/audit_de_securite_docker/&quot;&gt;Link to the presentaiton&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;hardening-a-java-card-virtual-machine-implementation-with-the-mpu&quot;&gt;Hardening a Java Card Virtual Machine Implementation with the MPU&lt;/h2&gt;
&lt;h4 id=&quot;guillaume-bouffard-l√©o-gaspard&quot;&gt;&lt;em&gt;Guillaume Bouffard, L√©o Gaspard&lt;/em&gt;&lt;/h4&gt;

&lt;p&gt;The speaker will introduce how to make a JavaCard JVM hardened using the features of a CPU.
To obtain a trusted root, you need a secure and robust component in which you can store a cryptographic secret that will cryptographically sign and verify the integrity of some parts (or all) of the trusted system.&lt;/p&gt;

&lt;p&gt;JavaCard technology is based on the JVM that runs on a smart card. There is no open-source implementation, but the majority of JavaCard platforms are evaluated.&lt;/p&gt;

&lt;p&gt;The JVM is often independent of the secure component on which it operates, and the confinement is done at the application level, which at a cost in performance. As a result, the speakers decided to work on this JVM to use the hardware mechanisms of the smart card.
The Memory Protection Unit is configured in privileged mode and allows setting the read/write/execution restrictions. But these configurations are limited to 8 memory regions, roughly 8 pages of MMU on a conventional CPU. One region can be included in another to refine the insulation.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.sstic.org/2018/presentation/hardening_a_java_card_virtual_machine_implementation_with_the_mpu/&quot;&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;dans-les-coulisses-de-l√©quipe-s√©curit√©-debian&quot;&gt;Dans les coulisses de l‚Äô√©quipe s√©curit√© Debian&lt;/h2&gt;
&lt;h4 id=&quot;yves-alexis-perez&quot;&gt;&lt;em&gt;Yves-Alexis Perez&lt;/em&gt;&lt;/h4&gt;

&lt;p&gt;The speaker is a volunteer with the Debian security team.
He will introduce his role in the team and how Debian manages the vulnerabilities.&lt;/p&gt;

&lt;p&gt;Only 10 peoples, 5 active, all are volunteers.
Some other guys help: package maintainers, researchers, project maintainers.&lt;/p&gt;

&lt;p&gt;The team job is to manage the distribution security on stable version (Stretch and Jessy).
They prepare packages security updates and write security-announce.
They coordinate with the other teams: developers, etc.&lt;/p&gt;

&lt;p&gt;The Debian security team also contributes to hardening the Debian ecosystem.
However, they do not work on the platform security (Debian account and keys management, CI, Debian LTS, etc)&lt;/p&gt;

&lt;p&gt;They admin the security tracker website that reports the current distribution security state and publish CVE list.&lt;/p&gt;

&lt;p&gt;The security-tracker is a public git repo. They have private repositories, for instance for threats under embargo.&lt;/p&gt;

&lt;p&gt;They also monitor external mailing lists, and their mail address about vulnerability reports.
To help them in this task, they have the External-check tool that is a script that grabs the CVE and adds them to a list. The list is curated by the team;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;the vulnerability is identified&lt;/li&gt;
  &lt;li&gt;the CVE is assigned&lt;/li&gt;
  &lt;li&gt;a fix is identified&lt;/li&gt;
  &lt;li&gt;the patch is applied&lt;/li&gt;
  &lt;li&gt;the package is built locally&lt;/li&gt;
  &lt;li&gt;the package is uploaded to security-master&lt;/li&gt;
  &lt;li&gt;the package is built by the build bots&lt;/li&gt;
  &lt;li&gt;the package is released to the security mirror&lt;/li&gt;
  &lt;li&gt;security-announce mail is sent&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Different kind of vulnerabilities: public, private and complexes&lt;/p&gt;

&lt;p&gt;In practice, embargo delay the patch and not developed by many people&lt;/p&gt;

&lt;p&gt;Finally, the speaker introduces some example of vulnerabilities.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;KRACK&lt;/strong&gt;
In August, the CERT contact Debian and share all the details, the draft of the paper, and proofs of concept. In October, wpa_supplicant maintainers contact Debian with their current work and patch proposals.
To conclude, during the embargo, Debian can learn about the vulnerabilities and check that wpa_supplicant patches are working. At the end of the embargo in November, Debian published the update.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Meltdown&lt;/strong&gt;: very painful for Debian because it was aware of the vulnerability during the embargo period. Debian got the info about Meltdown the same day as the public. So they can‚Äôt get prepared.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.sstic.org/2018/presentation/debian-security-team/&quot;&gt;Link to the presentation&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;a-practical-guide-to-differential-power-analysis-of-usim-cards&quot;&gt;A Practical Guide to Differential Power Analysis of USIM Cards&lt;/h2&gt;
&lt;h4 id=&quot;adrian-thillard-christophe-devine-manuel-san-pedro-anssi&quot;&gt;&lt;em&gt;Adrian Thillard, Christophe Devine, Manuel San Pedro (ANSSI)&lt;/em&gt;&lt;/h4&gt;

&lt;p&gt;The speaker begins introducing Milenage, an algorithm used to derivate the credentials in SIM cards.
Thanks to Milenage, the phone can authenticate itself on the operator network.
If an attacker can get secrets from the SIM card, the impact on privacy is huge for the user.
To do this, we can perform a power consumption variations analysis using an oscilloscope, also known as DPA.
This allows an attacker to identify the execution steps of the algorithm.
  from traces of references that are not always very clean because the clock of the card is not super precise.
We must then re-align the peaks in order to have a proper basis of comparison. On the assumption that the data affects consumption.
It requires about 4000 of traces to validate the hypothesis using a 400‚Ç¨ oscilloscope and python scripts. The number of traces required can be reduced using better equipment (e.g a 15000‚Ç¨ oscilloscope).&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.sstic.org/2018/presentation/a_practical_guide_to_differential_power_analysis_of_usim_cards/&quot;&gt;Link to the presentation&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;hacl-une-biblioth√®que-de-cryptographie-formellement-v√©rifi√©e-dans-firefox&quot;&gt;HACL* une biblioth√®que de cryptographie formellement v√©rifi√©e dans Firefox&lt;/h2&gt;
&lt;h4 id=&quot;benjamin-beurdouche-jean-karim-zinzindohoue&quot;&gt;&lt;em&gt;Benjamin Beurdouche, Jean Karim Zinzindohoue&lt;/em&gt;&lt;/h4&gt;

&lt;p&gt;The speaker was a member of the INRIA PROCECO team.
He will introduce HACL*, a formally verified crypto library.
Writing crypto is not really easy.
As example, we can have a look at the OpenSSL CVE list: side channel attack, buffer overflow‚Ä¶
It is also true for NaCl (salt) which is a modern primitive cryptographic library.&lt;/p&gt;

&lt;p&gt;How to improve the situation. How can the community help? Using formal methods.
Which approach to choose. 3 axes already exit:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;using assembly: best performances, no compiler (no bug, no fault introduced), best control on a side channel, ut - specific to the platform&lt;/li&gt;
  &lt;li&gt;using C: portable, good performance, but introduce a compiler&lt;/li&gt;
  &lt;li&gt;using a high-level programming language: easy, but slow,&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thus they propose HACL (hacl-star) : a library with a small size, but complete, autonomous, written in F&lt;em&gt;, C code generated from F&lt;/em&gt; code, C code is published&lt;/p&gt;

&lt;p&gt;F* is a verification oriented language close to OCaml for proof automation.
How to produce C code from F&lt;em&gt;?
F&lt;/em&gt; -&amp;gt; Low* with F* compiler.
Then KreMLin: Low* -&amp;gt; C (correction proof)&lt;/p&gt;

&lt;p&gt;What is proved: memory safety, execution independency
Safety memory thanks to F*. IF it compiles, the code is safe from the memory point of view.&lt;/p&gt;

&lt;p&gt;How to prove the code is correct?&lt;/p&gt;

&lt;p&gt;HACL* is faster than C implementation.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.sstic.org/2018/presentation/hacl_cryptographie_formellement_verifiee_dans_firefox/&quot;&gt;Link&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Fri, 15 Jun 2018 20:03:48 +0200</pubDate>
        <link>http://alexisduque.me/2018/06/15/sstic-part-2/</link>
        <guid isPermaLink="true">http://alexisduque.me/2018/06/15/sstic-part-2/</guid>
        
        
      </item>
    
      <item>
        <title>SSTIC Part 1</title>
        <description>&lt;p&gt;From the 13 to 15 June, I was happy to attend for the first time the 0X10 edition of the SSTIC, that traditionally takes place in Rennes every year in June.
This year, the event gathered 800 participants, mostly security experts, pentesters or researcher, in the luxurious and brand new &lt;em&gt;Couvent des Jacobins&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;I will share some of the notes I took during these 3 days of conferences. Unfortunately, I only report the presentations relevant to my field, or that caught my attention: &lt;em&gt;#iot #embedded #hardware #sidechannel&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Note that the conference proceedings and video recording are already available on the &lt;a href=&quot;sstic&quot;&gt;SSTIC web site&lt;/a&gt;. Awesome!&lt;/p&gt;

&lt;h2 id=&quot;opening-keynote-closed-heterogenous-platforms-and-the-defensive-reverse-engineers-dilemma&quot;&gt;Opening Keynote: Closed, heterogenous platforms and the (defensive) reverse engineers dilemma&lt;/h2&gt;
&lt;h5 id=&quot;halvar-flake&quot;&gt;Halvar Flake&lt;/h5&gt;

&lt;p&gt;‚ÄúHalvar Flake‚Äù gave us a retrospective on the reverse-engineering from his experiences. In fact,  tools have changed a lot since it started 20 years ago.&lt;/p&gt;

&lt;p&gt;IDA has not changed a lot in 20 years and remains his favorite tool for binary reverse engineering. After 13 years of RE, Halvar made a break of 6-7 years during which he managed dev and security teams. And he came back to RE:&lt;/p&gt;

&lt;p&gt;Many things have evolved: the solvers have become usable to generate entries for programs, a lot of tools for RCE has been developed: r2, frida, angr, ‚Ä¶
But when you try them on real cases, it does not work.
Example with MPENGINE.DLL for which is difficult to obtain coverage traces.
The live debug on mobile systems are difficult to get, etc.&lt;/p&gt;

&lt;p&gt;Why does not it work very well? Some reasons are external to the reverse community, others are related to this community.
Platform providers like iOS or Android sacrifice ‚Äúdebuggability‚Äù to stop the reverse for ‚Äúsecurity‚Äù purposes.
However, that is in favor of ‚Äúbig‚Äù players (hackers groups or state hackers) who have the means.
POn the other side, defenders who do not have the means are left behind.&lt;/p&gt;

&lt;p&gt;Example with iOS, for which you must set up ridiculous and expensive hacks to debug an application correctly.
Manufacturers are often advised to remove the JTAG, even when physical attacks are not part of the threat model.
Consequently, we lose observability, breaking the analysis and investigation capabilities of these devices.&lt;/p&gt;

&lt;p&gt;Reducing the access to debugging means on a device decreased the population able to work on its security.
In fact, fewer hackers make the curing of a platform slower, which benefits real attackers.&lt;/p&gt;

&lt;p&gt;Time-to-market has forced developers to reduce the dev, deployment &amp;amp; testing time.
So they often work on WIP devices, not very debuggable.
That complicates the diagnosis of bugs and threats in these applications, reducing their safety.&lt;/p&gt;

&lt;p&gt;The market for RE products is very small and as a result support only between 12 to 60 engineers in the world.&lt;/p&gt;

&lt;p&gt;The ‚Äútechnical‚Äù cost of designing RE tools is not covered by benefits because of the small market&lt;/p&gt;

&lt;p&gt;Also, RE scripts, are often written in a hurry and become later tools used in the long run because anything else exists.
The problem is that the RE community does not take the time to think about the future and invest in it. For instance, they do not pay attention to the memory footprint of scripts, or the ability to distribute the computation on multiple nodes.&lt;/p&gt;

&lt;p&gt;In addition, a large number of RE frameworks have similar features but do not cover all your needs.
Some of them are far from stable, or CPU/memory efficient.
Ha said that &lt;em&gt;‚ÄúIt looks like the JavaScript community‚Äù&lt;/em&gt;, and a lot of stuff is done twice or three times, on X frameworks.
And they are sometimes developed in a hurry, just before CFP deadlines.&lt;/p&gt;

&lt;p&gt;Also, in the literature, many problems have been ‚Äúsolved‚Äù, but in reality, for everyday work, these tools are far from keeping their promises.
In fact, published results are rarely reproducible, data are not available, and sources are rarely published.
Consequently, when we read a paper, we can no longer distinguish if the author exaggerates, or if the problem has been really solved.&lt;/p&gt;

&lt;p&gt;The RE tools often focus on the source code and the recovery of the latter, but rarely on the understanding of the software package we reverse.&lt;/p&gt;

&lt;p&gt;Finally, Halvar introduce some proposals:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;it is necessary that the developers of software or hardware platforms make them debuggable to facilitate the analysis.&lt;/li&gt;
  &lt;li&gt;it would be necessary to find a way to exchange the RE data, using a standard step to move from the binary to the assembler, to the assembler to CFG, etc&lt;/li&gt;
  &lt;li&gt;intermediate representation adapted to the different data used and generated by the reverse tools should be standardized. Thus, we could switch from one tool to another without having to re-develop all existing scripts &amp;amp; tools for this new framework&lt;/li&gt;
  &lt;li&gt;a Linux distribution for the reverse as there is for the pentest, on which we could have all the necessary tools&lt;/li&gt;
  &lt;li&gt;to improve the reliability of RE tools, we need data to test and validate them.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With the cloud, any software can run on machines all over the world. But debugging in the cloud is painful because there is no ‚Äúcloud debugger‚Äù to manage such system.
Dealing with CPU/GPU/ŒºC/FPGA infrastructures is a big challenge for RE tools.
These components are not well documented. Thus, a vulnerability on this type of components will be very difficult to manage for defenders (e.g. Spectre / Meltdown ‚Ä¶)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.sstic.org/2018/presentation/2018_ouverture/&quot;&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;backdooring-your-server-but-its-bmc-the-hpe-ilo4-case&quot;&gt;Backdooring your server, but its BMC: the HPE iLO4 case&lt;/h2&gt;
&lt;h5 id=&quot;alexandre-gazet-fabien-perigaud-joffrey-czarny-airbus&quot;&gt;Alexandre Gazet, Fabien Perigaud, Joffrey Czarny (Airbus)&lt;/h5&gt;

&lt;p&gt;This talk presents the pentest of the iLO4 HP system and some critical vulnerabilities the author found.
iLO systems are widely used by many server manufacturers as a stand-alone and independent ARM-based chipset with its own RAM and network interface.
This system starts as soon as the server is powered.
These iLOs are exposed on production VLANs, and often exposed even on the internet.
A first exploit allows them to retrieve information in memory on the system managed by the iLO and write code arbitrarily to obtain a shell via netcat on the main server.&lt;/p&gt;

&lt;p&gt;The iLOs web service have been the subject of two CVEs in 2017.
The webservice makes a massive use of &lt;code&gt;scanf&lt;/code&gt; to parse HTTP headers.
Unfortunately, there are some buffer overflows, with one in the &lt;code&gt;Connection&lt;/code&gt; header that allows an attacker to overwrite a variable, ann thus bypass the authentication and access the REST API of the iLO with admin rights.&lt;/p&gt;

&lt;p&gt;Relying on this RCE, the speakers have worked on the ILO firmware to patch the bootloader, to later patch the kernel and insert a backdoor in the userland, in the iLO flash memory.
The authors choose the web server as the target to install the backdoor since it has all the communication primitives, along with a DMA access to the memory of the main machine.&lt;/p&gt;

&lt;p&gt;To install the backdoor in the Linux system, an attacker must create a thread in the kernel, allocate memory for the communication channel between the iLO and the Linux, and set up the execution primitives of the commands received on the memory buffer&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.sstic.org/2018/presentation/subverting_your_server_through_its_bmc_the_hpe_ilo4_case/&quot;&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;t-brop---taint-based-return-oriented-programming&quot;&gt;T-Brop - Taint-based Return Oriented Programming&lt;/h2&gt;
&lt;h5 id=&quot;colas-le-guernic-francois-khourbiga-anssi&quot;&gt;Colas Le Guernic, Francois KHOURBIGA (ANSSI)&lt;/h5&gt;

&lt;p&gt;The speaker began introducing the exploitation of a buffer overflow vulnerability by re-using the existing code in the binary. They reminded the protection that must be circumvented.&lt;/p&gt;

&lt;p&gt;Code reuse attacks reuse bits of code, called &lt;em&gt;gadget&lt;/em&gt;.
These gadgets often en with a &lt;code&gt;ret&lt;/code&gt; instruction.
The DEP is not enough, it must also use the CFI, etc ‚Ä¶&lt;/p&gt;

&lt;p&gt;To find these gadgets in a binary, 2 approaches exist:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;the syntactical approach, where the tool makes a &lt;code&gt;grep&lt;/code&gt; in the program (e.g. rp++)&lt;/li&gt;
  &lt;li&gt;the symbolic approach, where the tool does it in symbolic. It is more efficient but is very costly in time (e.g. angrop).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With RP ++, it is fast but we are fig to build the ROP chain using &lt;code&gt;grep&lt;/code&gt; &lt;em&gt;√† la mano&lt;/em&gt; the gadgets we want.
With angrop, it is very and can take between 15 in &lt;em&gt;fast mode&lt;/em&gt; and hours.&lt;/p&gt;

&lt;p&gt;In order to take the best of these 2 approaches, the speakers propose, &lt;em&gt;T-Brop&lt;/em&gt;, a hybrid approach that is faster than symbolic analysis, and more expressive than syntactical approaches.
So we have a tool less efficient than syntactic but faster than the symbolic.&lt;/p&gt;

&lt;p&gt;T-Brop is a little faster (7min) and offers some interesting gadgets based on &lt;code&gt;rsp&lt;/code&gt; &amp;amp; &lt;code&gt;esp&lt;/code&gt;, or data above the stack.
In a nutshell, Angrop is good for &lt;em&gt;highway&lt;/em&gt; cases, RP++ is for regexp lovers, and T-Brop sometimes offers some tricky stuff.&lt;/p&gt;

&lt;p&gt;T-Brop is based on hue to manage which register depends on which other in the chain of gadgets.
This influence is represented as dependency matrices for each gadget.
To determine the impact of the sequence of gadgets on the registers, it is enough to make a product of matrix.
By generalizing that, it is possible to identify whether or not it is possible to influence a target register by linking together a set of gadgets, and which registers to target in order to use the ropchain we built.
T-Brop implementation is based on python3 and is available on &lt;a href=&quot;https://github.com/DGA-MI-SSI/T-Brop&quot;&gt;Github&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.sstic.org/2018/presentation/T-Brop/&quot;&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;risques-associ√©s-aux-signaux-parasites-compromettants--le-cas-des-c√¢bles-dvi-et-hdmi&quot;&gt;Risques associ√©s aux signaux parasites compromettants : le cas des c√¢bles DVI et HDMI&lt;/h2&gt;
&lt;h5 id=&quot;emmanuel-duponchelle-pierre-michel-ricordel&quot;&gt;Emmanuel DUPONCHELLE, Pierre-Michel Ricordel&lt;/h5&gt;

&lt;p&gt;There are radio signals transmitted willingly (radio, WiFi, Bluetooth, etc), and radio signals emitted unbeknownst of the system.
For example, the cathodic screens of the past that generated radiations that could be received and decoded by means of an antenna.
Now with the Software Defined Radio (SDR), capturing these signals only requires a small dongle with a tiny antenna.
Although cathodic screens have disappeared, many components emit on our behalf, especially video cables between computer and screen.
The speakers present a demo using a small USRP and the &lt;strong&gt;tempestsdr&lt;/strong&gt;, SDR tool to recover this kind of signal.
The speakers can intercept the signal of their own laptop they were using during the presentation.&lt;/p&gt;

&lt;p&gt;The talk follows with some insights on VGA, HDMI and DVI signals.
Faster is the potential variation, stronger the radiation. In VGA, it does not go fast, so the fronts are soft, and the radiation is weak.
With DVI, the frequency is fast, and the changes of fronts are strong, and so the radiation level is high.&lt;/p&gt;

&lt;p&gt;To avoid radiation, the armor must be complete and if there is a hole, it will leak ‚Ä¶ and so your screen with.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.sstic.org/2018/presentation/risques_spc_dvi_et_hdmi/&quot;&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;three-vulns-one-plug&quot;&gt;Three vulns, one plug&lt;/h2&gt;
&lt;h5 id=&quot;gwenn-feunteun-olivier-dubasque-yves-duchesne-acceis&quot;&gt;Gwenn Feunteun, Olivier Dubasque, Yves Duchesne (Acceis)&lt;/h5&gt;

&lt;p&gt;The 2 speakers introduce the reverse engineering of a WiFi smart plug and the threat they found in the WiFi PSK exchange mechanism between the plug and the smartphone.&lt;/p&gt;

&lt;p&gt;The ‚Äúsmart‚Äù plug use WiFi with a ‚Äúsmart‚Äù pairing technology avoiding to manually enter on the plug the PSK of the WiFi AP.
That is not based on WPS but the configuration is achieved using an android application.
In the application, the user must type the WiFi password, and choose the plug that has been detected by the application.&lt;/p&gt;

&lt;p&gt;The authors begin by sniffing the network and look at the WiFi packets exchanged to send the security information.
They found broadcast messages that consist of a series of fixed-size messages and then variable-sized packets.
If fact, the plug manufacturer built a side channel using the size of the encrypted broadcast packets to encode the PSK.
Then, reading the doc of the WiFi module, we can see that the wireless module is listening on a UDP port and accepts AT commands that can everything in the WiFi module configuration.
Also, on the PCB, a UART can be leveraged to recover the key of the WiFI network, or to change the module configuration.
The speakers have developed a &lt;em&gt;patch&lt;/em&gt; to enable WPS sending the right AT command with an Arduino.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.sstic.org/2018/presentation/three_vulns_one_plug/&quot;&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;escape-room-pour-la-sensibilisation-√†-la-s√©curit√©-informatique&quot;&gt;Escape room pour la sensibilisation √† la s√©curit√© informatique&lt;/h2&gt;
&lt;h5 id=&quot;eric-alata-erwan-beguin-vincent-nicomette-insa-toulouse&quot;&gt;Eric Alata, Erwan Beguin, Vincent Nicomette (INSA Toulouse)&lt;/h5&gt;

&lt;p&gt;The speaker presented an escape room his team developed in a student project at the INSA Toulouse.
The escape room aims to teach the good habits of computer security and how to protect themselves from current social engineering attacks.
Two scenarios are proposed. The first one aims to secure a working environment.
In the second one, 3 participants must steal documents from a company.&lt;/p&gt;

&lt;h2 id=&quot;du-pcb-√†-lexploit-√©tude-de-cas-dune-serrure-connect√©e-bluetooth-low-energy&quot;&gt;Du PCB √† l‚Äôexploit: √©tude de cas d‚Äôune serrure connect√©e Bluetooth Low Energy&lt;/h2&gt;
&lt;h5 id=&quot;damien-cauquil-digital-security&quot;&gt;Damien Cauquil (Digital Security)&lt;/h5&gt;

&lt;p&gt;During this talk, Damien Cauquil (&lt;a href=&quot;https://twitter.com/virtualabs&quot;&gt;@virtualabs&lt;/a&gt;) introduce a methodology to conduct the pentest of an IoT device, considering hardware and software attacks.
Unfortunately, the speaker laptop rapidly went wrong and the presentation was a bit hashed.
In any case, I highly recommend to read the paper in the conference proceedings.&lt;/p&gt;

&lt;p&gt;Hacking hardware is not always as easy as taking a logical parser, wiring a uart, and so getting a shell.
In practice, a methodology is needed:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Functional analysis of the device to be tested&lt;/li&gt;
  &lt;li&gt;Hardware vulnerabilities research&lt;/li&gt;
  &lt;li&gt;PCB reverse engineering&lt;/li&gt;
  &lt;li&gt;Firmware, mobile application collecting and disassembly.&lt;/li&gt;
  &lt;li&gt;Software vulnerabilities research&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Damien then applies his methodology, giving a smart lock use case.
Studying the lock usage is essential, and a careful observation gives the following insights:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;18 hours of autonomy implies the use of a low energy technology&lt;/li&gt;
  &lt;li&gt;there are no electrical protections against the over voltage on the USB port&lt;/li&gt;
  &lt;li&gt;there is no component to detect the position of the rotor of the lock, which means that the software does not know in which position is the lock&lt;/li&gt;
  &lt;li&gt;on the lock PCB, there is a nRF52 BLE module and an engine driver for the motor.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then, the interconnections between the components can be determined by using a multimeter or studying their datasheet.
Once the JTAG / UART / SWD are identified, the attacker can try to recover the firmware from the MCU, and begin its analysis.
The firmware can also be recovered at the network level or on the smartphone during the firmware update.&lt;/p&gt;

&lt;p&gt;The firmware, as the Android application, can be disassembled using IDA PRO and JADX respectively.&lt;/p&gt;

&lt;p&gt;After a quick look on the code, Damien discovered that the authentication part of the lock is broken.
In fact, the &lt;em&gt;pseudo-random&lt;/em&gt; nonce used for encryption is ‚Ä¶ always set to 1.
Also, the BLE connection between the smartphone does not require pairing meaning that a man in the middle can easily be performed.&lt;/p&gt;

&lt;p&gt;Finally, the speaker presents this BLE MITM attack using the &lt;a href=&quot;https://github.com/DigitalSecurity/btlejuice&quot;&gt;BtleJuice&lt;/a&gt; tool it developed.
The attack allows him to capture the authentication token, and to replay it.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.sstic.org/2018/presentation/du_pcb__lexploit_cas_dune_serrure_connecte_ble/&quot;&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;wookey-usb-devices-strike-back&quot;&gt;Wookey: USB devices strike back&lt;/h2&gt;
&lt;h5 id=&quot;arnauld-michelizza-j√©r√©my-lefaure-mathieu-renard-philippe-thierry-philippe-trebuchet-ryad-benadjila&quot;&gt;Arnauld Michelizza, J√©r√©my Lefaure, Mathieu Renard, Philippe Thierry, Philippe Trebuchet, Ryad Benadjila&lt;/h5&gt;

&lt;p&gt;The authors present a device that is robust against BadUSB attack.
Their device should not be too expensive and be shareable in open-hardware / open-source.&lt;/p&gt;

&lt;p&gt;As part of the USB standard, it is the device that declares its functionality to the OS.
Thus if the device is lying on its features, the OS keeps trusting the key: that is the BadUSB attack scenario.
Along with this attack, the speakers also want to protect themselves against the theft of crypto data, so it needs a SoC solid enough to allow their implementation in a safe way.
The use of a secure-element to store encryption keys, a keyboard/touchscreen independent of the host for entering the pin code, a ŒºSD slot to host the storage, and two USB ports.&lt;/p&gt;

&lt;p&gt;The firmware of the keys contains a bootloader firmware and a backup firmware in case of a glitch.
One part is reserved for crypto signature, and a release mechanism triggerable by pressing a physical button.&lt;/p&gt;

&lt;p&gt;Each software module managing each function of the keys must be isolated from the others.
The speakers implement their own micro-kernel, called Ewok, and manages application modules of crypto, USB, pin code, secure-element.
The MPU is used to define rights and attributes on memory regions to ensure isolation without an MMU.&lt;/p&gt;

&lt;p&gt;To secure the syscall, which is the only attack surface between the app code and the kernel, the speakers used Ada and SPARK.
Thus, depending on the criticality of a functionality, the speakers chose the appropriate programming language, from the least restrictive (the C), to the most constrained (SPARK).&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.sstic.org/2018/presentation/wookey_usb_devices_strike_back/&quot;&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;dump-de-flash-sur-circuit-imprim√©&quot;&gt;Dump de flash sur circuit imprim√©&lt;/h2&gt;
&lt;h5 id=&quot;emma-benoit-guillaume-heilles-philippe-teuwen&quot;&gt;Emma Benoit, Guillaume Heilles, Philippe Teuwen&lt;/h5&gt;

&lt;p&gt;The speakers give their feedback on developing their own chip adapter to dump the memory of a flash chip.
When we want to recover the content of a flash, we often try to connect to the pins of the chip and dump.
But sometimes we come across a chip whose pins are under the chip, so we must unseat the flash, and then use the right adapter or make our own.
The speaker decided to make his own.
The authors designed a PCB using KiCAD and present few methods to build it:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;a chemical method&lt;/li&gt;
  &lt;li&gt;using a CNC to cut the tracks directly into the copper, then adding a green insulating paste&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To solder a BGA component by hand, it is necessary to use a microscope, and it looks very painful.&lt;/p&gt;

&lt;p&gt;As soon as the homemade chip adapter is built hardware attack, we can micro solder the ‚Äúadapted‚Äù&lt;/p&gt;

&lt;p&gt;The global investment cost is about 1200 ‚Ç¨ for both techniques, the per PCB cost is negligible.
If the BGA component pitch is very tiny (~um), a CNC laser must be used to gain precision.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.sstic.org/2018/presentation/attacking_serial_flash_chip_case_study_of_a_black_box_device/&quot;&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;That‚Äôs all for the first part! But you can &lt;a href=&quot;/2018/06/15/sstic-part-2/&quot;&gt;go to the 2nd part of my notes&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Wed, 13 Jun 2018 20:03:48 +0200</pubDate>
        <link>http://alexisduque.me/2018/06/13/sstic-part-1/</link>
        <guid isPermaLink="true">http://alexisduque.me/2018/06/13/sstic-part-1/</guid>
        
        
      </item>
    
      <item>
        <title>Upcomming Events</title>
        <description>&lt;p&gt;The series of my talk about &lt;strong&gt;IoT Security&lt;/strong&gt; continues in May and June!&lt;/p&gt;

&lt;h2 id=&quot;i-will-give-a-presentation-in-the-following-events&quot;&gt;I will give a presentation in the following events&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://rivieradev.fr&quot;&gt;RiveraDev&lt;/a&gt;, May 16-18, Sophia Antipolis&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.meetup.com/fr-FR/GDG-Cloud-Lyon/events/248775026/&quot;&gt;Google Cloud &amp;amp; IoT Meetup&lt;/a&gt;, May 31, Epitech Lyon&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://voxxeddays.com/luxembourg/&quot;&gt;Voxxedday LU&lt;/a&gt;, June 22, Luxembourg&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I hope to see you there!&lt;/p&gt;
</description>
        <pubDate>Thu, 10 May 2018 09:44:34 +0200</pubDate>
        <link>http://alexisduque.me/2018/05/10/up-event/</link>
        <guid isPermaLink="true">http://alexisduque.me/2018/05/10/up-event/</guid>
        
        
      </item>
    
      <item>
        <title>PACLIDO project</title>
        <description>&lt;p&gt;Since the beginning of the year, I am involved with Rtone in the FUI23 PACLIDO project.&lt;/p&gt;

&lt;p&gt;PACLIDO is a collaborative project that aims to develop lightweight cryptographic algorithms and protocols for the Internet of Thing.&lt;/p&gt;

&lt;p&gt;The other partners are Airbus Cybersecurity, LORIA-CNRS, Sophia Conseil, CEA, Universit√© de Limoges and Trusted Object.&lt;/p&gt;

&lt;p&gt;Rtone is leading 2 work packages: the use cases and demonstrations definition, and the project dissemination.&lt;/p&gt;

&lt;p&gt;You can found more information about the project and news on its website &lt;a href=&quot;https://paclido.fr&quot;&gt;paclido.fr&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://paclido.fr/img/logo.png&quot; alt=&quot;PACLIDO&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 09 May 2018 09:44:34 +0200</pubDate>
        <link>http://alexisduque.me/2018/05/09/paclido/</link>
        <guid isPermaLink="true">http://alexisduque.me/2018/05/09/paclido/</guid>
        
        
      </item>
    
      <item>
        <title>Devoxx France and MiXiT 2018</title>
        <description>&lt;p&gt;From April 18 to 20,  I attended the &lt;a href=&quot;http://www.devoxx.fr&quot;&gt;Devoxx France&lt;/a&gt; (Wed &amp;amp; Tue, Paris), and the &lt;a href=&quot;http://www.mixitconf.org&quot;&gt;MiXiT&lt;/a&gt; (Fri, Lyon) conferences.&lt;/p&gt;

&lt;p&gt;During these software developer events, I gave a popularization talk about &lt;a href=&quot;https://cfp.devoxx.fr/2018/talk/ZPI-2357/La_securite_dans_l'IoT_:_difficultes,_failles_et_contre-mesures&quot;&gt;IoT Security&lt;/a&gt; and a lightening talk introducing &lt;a href=&quot;https://cfp.devoxx.fr/2018/talk/YEW-3168/Spectre_et_Meltdown,_15_min_pour_tout_comprendre&quot;&gt;Spectre and Meltdown vulnerabilities&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can watch the recording of both conference on &lt;a href=&quot;https://www.youtube.com/channel/UCsVPQfo5RZErDL41LoWvk0A&quot;&gt;DevoxxFR YouTube channel&lt;/a&gt;.&lt;/p&gt;

&lt;script async=&quot;&quot; class=&quot;speakerdeck-embed&quot; data-id=&quot;b51c1fd5d9bf407baf3948dd065f1b1d&quot; data-ratio=&quot;1.77777777777778&quot; src=&quot;//speakerdeck.com/assets/embed.js&quot;&gt;&lt;/script&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/ThdFcdyqMik&quot; frameborder=&quot;0&quot; allow=&quot;encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;script async=&quot;&quot; class=&quot;speakerdeck-embed&quot; data-id=&quot;c1857f1daadf4f6ba138f402e359bf80&quot; data-ratio=&quot;1.77777777777778&quot; src=&quot;//speakerdeck.com/assets/embed.js&quot;&gt;&lt;/script&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/fsV4R5Fvn2g&quot; frameborder=&quot;0&quot; allow=&quot;encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

</description>
        <pubDate>Mon, 30 Apr 2018 09:44:34 +0200</pubDate>
        <link>http://alexisduque.me/2018/04/30/devoxx-mixit-2018/</link>
        <guid isPermaLink="true">http://alexisduque.me/2018/04/30/devoxx-mixit-2018/</guid>
        
        
      </item>
    
  </channel>
</rss>
